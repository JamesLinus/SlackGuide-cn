%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Kristina Fuxell) (Walnut Creek CDROM)
%%Title: (slack7_logo.eps)
%%CreationDate: (10/12/99) (11:41 AM)
%%BoundingBox: 200 400 478 487
%%HiResBoundingBox: 200.4342 400.0493 477.3733 486.4154
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 33 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 130 564 3 1146 827 18 0 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
0 0 0 0 k
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
u
*u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
211.8549 455.5205 m
211.8549 459.9661 l
211.8549 460.6982 211.9923 461.2227 212.2669 461.5397 c
212.5418 461.8557 212.9866 462.0141 213.6032 462.0141 c
214.2854 462.0141 214.8269 461.5474 215.2267 460.6156 c
215.4928 460.0489 215.734 459.6243 215.9508 459.3418 c
216.6502 458.4426 217.682 457.7222 219.0479 457.1814 c
220.413 456.6396 221.9201 456.3696 223.5685 456.3696 c
225.3332 456.3696 226.7482 456.7271 227.8143 457.4436 c
228.8797 458.1593 229.4128 459.0998 229.4128 460.2659 c
229.4128 461.4474 228.9834 462.2889 228.1266 462.7884 c
227.2688 463.2879 225.7991 463.5376 223.7184 463.5376 C
222.3446 463.5376 l
218.9479 463.5376 216.3583 464.1285 214.5772 465.311 c
212.7953 466.4925 211.9049 468.2081 211.9049 470.4559 c
211.9049 472.6538 212.7743 474.3599 214.5148 475.5759 c
216.2545 476.7911 218.6982 477.3992 221.8452 477.3992 c
223.1267 477.3992 224.434 477.2197 225.7664 476.8622 c
227.0978 476.5039 227.7972 476.3251 227.8643 476.3251 c
228.0469 476.3251 228.3966 476.4876 228.9132 476.8121 c
229.4292 477.1369 229.9373 477.2992 230.4367 477.2992 c
231.0026 477.2992 231.4233 477.0909 231.6981 476.6748 c
231.9727 476.258 232.1101 475.6337 232.1101 474.8016 C
232.1101 471.8796 l
232.1101 470.9967 231.9766 470.36 231.7105 469.9689 c
231.4436 469.5771 231.019 469.3819 230.4367 469.3819 c
229.9373 469.3819 229.3207 469.8065 228.5886 470.6557 c
228.0719 471.2379 227.6473 471.6796 227.3148 471.9794 c
226.4321 472.795 225.4916 473.382 224.4926 473.7402 c
223.4935 474.0976 222.3196 474.2771 220.971 474.2771 c
219.4053 474.2771 218.1441 473.9315 217.1871 473.2406 c
216.2295 472.5492 215.751 471.6711 215.751 470.6058 c
215.751 469.5568 216.2421 468.8075 217.2246 468.358 c
218.2066 467.9083 220.3217 467.6501 223.5685 467.5838 c
227.0315 467.5002 229.5626 466.8969 231.161 465.773 c
232.7595 464.6491 233.5587 462.9133 233.5587 460.5655 c
233.5587 458.3177 232.676 456.5195 230.9113 455.1709 c
229.1459 453.8221 226.7653 453.1478 223.7683 453.1478 c
222.8192 453.1478 221.7616 453.2352 220.5964 453.4101 c
219.4303 453.5849 217.9654 453.8799 216.2007 454.2967 c
215.6176 453.9135 215.1182 453.6271 214.7021 453.435 c
214.2854 453.2437 213.9357 453.1478 213.6531 453.1478 c
213.0702 453.1478 212.6245 453.3522 212.317 453.7597 c
212.0087 454.1671 211.8549 454.7541 211.8549 455.5205 c
f
*U
*u
247.1034 457.2438 m
247.1034 482.8189 L
242.8577 482.8189 l
241.2419 482.8189 240.2306 482.9477 239.823 483.2059 c
239.4149 483.4635 239.2111 483.9341 239.2111 484.617 c
239.2111 485.2164 239.3813 485.6661 239.7232 485.9657 c
240.0642 486.2655 240.5598 486.4154 241.2092 486.4154 C
249.4512 486.4154 l
249.9007 486.4154 250.2504 486.3233 250.5001 486.1405 c
250.75 485.9572 250.8747 485.7075 250.8747 485.3913 C
250.8747 457.2438 L
258.7171 457.2438 l
259.3494 457.2438 259.8114 457.1063 260.1033 456.8317 c
260.3944 456.557 260.5404 456.1199 260.5404 455.5205 c
260.5404 454.8376 260.3983 454.3669 260.1157 454.1094 c
259.8325 453.851 259.2993 453.7222 258.5173 453.7222 C
240.0853 453.7222 l
239.4358 453.7222 238.9403 453.8721 238.5993 454.1717 c
238.2574 454.4715 238.0872 454.921 238.0872 455.5205 c
238.0872 456.1027 238.2621 456.536 238.6117 456.8191 c
238.9614 457.1017 239.4859 457.2438 240.1851 457.2438 C
247.1034 457.2438 l
f
*U
*u
279.1941 458.6049 m
277.3872 457.4974 275.4268 456.9441 273.3124 456.9441 c
271.8802 456.9441 270.7024 457.3102 269.7783 458.043 c
268.8542 458.7751 268.3921 459.7077 268.3921 460.8403 c
268.3921 462.3052 269.1328 463.4705 270.615 464.3368 c
272.0963 465.2025 274.1194 465.6356 276.6842 465.6356 c
277.5332 465.6356 278.3863 465.5646 279.2441 465.4234 c
280.1011 465.2812 280.9877 465.0611 281.9039 464.7615 c
281.9039 462.064 l
281.9039 460.8653 281.0001 459.7117 279.1941 458.6049 c
f
282.9031 454.1468 m
283.2027 453.8634 283.5852 453.7222 284.0519 453.7222 c
287.9731 453.7222 L
288.6389 453.7222 289.1383 453.8721 289.4717 454.1717 c
289.8041 454.4715 289.9711 454.921 289.9711 455.5205 c
289.9711 456.1698 289.7713 456.6193 289.3717 456.8692 c
288.9721 457.1189 288.1807 457.2438 286.9989 457.2438 c
285.7752 457.2438 L
285.7752 468.5578 L
285.7752 471.4713 285.0259 473.6731 283.5274 475.1637 c
282.0289 476.6537 279.8139 477.3992 276.8839 477.3992 c
274.0195 477.3992 271.6679 477.0572 269.8283 476.3751 c
267.9878 475.6921 267.0684 474.8595 267.0684 473.8775 c
267.0684 473.261 267.2262 472.7575 267.543 472.3666 c
267.8591 471.9748 268.2586 471.7796 268.7418 471.7796 c
269.2578 471.7796 270.3153 472.1293 271.9137 472.8287 c
273.5122 473.5279 274.9607 473.8775 276.2594 473.8775 c
278.1904 473.8775 279.614 473.4193 280.5303 472.5039 c
281.4459 471.5876 281.9039 470.1726 281.9039 468.258 c
281.9039 468.0832 L
280.8713 468.3493 279.8638 468.5452 278.8819 468.6701 c
277.8993 468.7951 276.9252 468.8574 275.9598 468.8574 c
272.2962 468.8574 269.4537 468.1332 267.4306 466.6846 c
265.4076 465.236 264.396 463.1958 264.396 460.5655 c
264.396 458.3505 265.1578 456.5522 266.6814 455.1709 c
268.2048 453.7886 270.2068 453.0979 272.6879 453.0979 c
274.3863 453.0979 276.0386 453.4225 277.6456 454.0719 c
279.2519 454.7212 280.7379 455.6617 282.1037 456.8942 c
282.3035 455.3707 l
282.4035 454.8376 282.6033 454.4293 282.9031 454.1468 c
f
*U
*u
314.5596 475.3012 m
314.5596 475.401 l
314.5596 475.9505 314.7173 476.354 315.0342 476.6124 c
315.3502 476.87 315.8412 476.9995 316.5077 476.9995 c
317.1899 476.9995 317.6605 476.7998 317.9189 476.4002 c
318.1765 476.0004 318.3059 475.1763 318.3059 473.9274 C
318.3059 469.2821 l
318.3059 468.6655 318.1475 468.2034 317.8315 467.8959 c
317.5145 467.5876 317.04 467.4339 316.4078 467.4339 c
315.9583 467.4339 315.5711 467.5627 315.2465 467.8209 c
314.9218 468.0785 314.5261 468.6154 314.0601 469.4318 c
313.261 470.7806 312.2908 471.7999 311.1505 472.4914 c
310.0094 473.1822 308.6982 473.5279 307.2167 473.5279 c
304.6194 473.5279 302.5089 472.7615 300.8854 471.2301 c
299.2621 469.6981 298.4504 467.7164 298.4504 465.2859 c
298.4504 462.8048 299.2285 460.7778 300.7856 459.2044 c
302.3418 457.6309 304.3446 456.8442 306.7922 456.8442 c
307.9075 456.8442 308.969 456.998 309.9766 457.3063 c
310.9834 457.6137 311.9373 458.0757 312.8363 458.6923 c
313.1525 458.8921 313.577 459.1996 314.11 459.6164 c
315.1918 460.4984 316.041 460.9401 316.6576 460.9401 c
317.1735 460.9401 317.5941 460.7778 317.9189 460.4531 c
318.2436 460.1286 318.4059 459.7077 318.4059 459.1919 c
318.4059 457.8759 317.1609 456.5319 314.6721 455.1583 c
312.1823 453.7847 309.5395 453.0979 306.7423 453.0979 c
303.1286 453.0979 300.119 454.2545 297.7135 456.5694 c
295.3073 458.8836 294.1046 461.7722 294.1046 465.236 c
294.1046 468.699 295.3034 471.5922 297.7011 473.9151 c
300.0988 476.2377 303.0959 477.3992 306.6923 477.3992 c
307.9575 477.3992 309.2274 477.2282 310.501 476.8872 c
311.7748 476.5453 313.1275 476.0169 314.5596 475.3012 c
f
*U
*u
332.3268 465.3359 m
330.079 463.2879 L
330.079 455.9201 l
330.079 455.2535 329.9416 454.7212 329.6668 454.3216 c
329.3921 453.922 329.0378 453.7222 328.6054 453.7222 C
323.985 453.7222 l
323.3355 453.7222 322.8439 453.8721 322.5114 454.1717 c
322.1781 454.4715 322.0118 454.921 322.0118 455.5205 c
322.0118 456.1863 322.207 456.6396 322.5988 456.8816 c
322.9897 457.1228 323.8264 457.2438 325.1089 457.2438 C
326.3076 457.2438 L
326.3076 482.8189 L
325.2836 482.8189 l
323.8515 482.8189 322.9274 482.9477 322.5114 483.2059 c
322.0946 483.4635 321.8869 483.9341 321.8869 484.617 c
321.8869 485.2164 322.0571 485.6661 322.399 485.9657 c
322.74 486.2655 323.2357 486.4154 323.885 486.4154 C
328.6553 486.4154 l
329.1049 486.4154 329.4546 486.3233 329.7043 486.1405 c
329.954 485.9572 330.079 485.7075 330.079 485.3913 C
330.079 467.4838 L
337.2969 473.5279 l
336.7474 473.7605 336.3431 474.0189 336.0855 474.3021 c
335.8273 474.5846 335.6985 474.9179 335.6985 475.3012 c
335.6985 475.8006 335.8811 476.1752 336.248 476.4251 c
336.6139 476.6748 337.1471 476.7998 337.8463 476.7998 C
344.6147 476.7998 l
345.247 476.7998 345.7301 476.6576 346.0634 476.3751 c
346.3958 476.0919 346.5629 475.6672 346.5629 475.1014 c
346.5629 474.1023 345.7551 473.5193 344.1403 473.353 c
343.8233 473.3195 343.5736 473.2859 343.391 473.2532 c
342.7081 473.1697 341.9588 472.9074 341.1432 472.4664 c
340.3268 472.0247 339.5025 471.4377 338.6706 470.7056 C
335.049 467.5337 L
344.5149 457.2438 L
346.6628 457.2438 l
347.3785 457.2438 347.8905 457.1104 348.1988 456.8442 c
348.5063 456.5772 348.6609 456.1362 348.6609 455.5205 c
348.6609 454.9374 348.4899 454.4918 348.1489 454.1843 c
347.807 453.876 347.3122 453.7222 346.6628 453.7222 C
339.8944 453.7222 l
339.1615 453.7222 338.6285 453.8471 338.296 454.0969 c
337.9627 454.3466 337.7964 454.7462 337.7964 455.2957 c
337.7964 455.7453 337.9587 456.1323 338.2834 456.4571 c
338.6082 456.7818 339.0952 457.044 339.7445 457.2438 C
332.3268 465.3359 l
f
*U
*u
369.979 455.0459 m
366.7072 466.4098 L
363.4854 454.5464 l
363.3183 453.9135 363.0686 453.4725 362.7361 453.2227 c
362.4029 452.973 361.9033 452.848 361.2376 452.848 c
360.6382 452.848 360.1715 453.0064 359.8389 453.3226 c
359.5056 453.6394 359.206 454.2131 358.9399 455.0459 C
353.2203 473.2532 L
352.9956 473.2532 l
352.2962 473.2532 351.7922 473.3905 351.4847 473.6653 c
351.1771 473.94 351.0226 474.402 351.0226 475.0513 c
351.0226 475.6172 351.1849 476.0505 351.5096 476.3501 c
351.8342 476.6499 352.3127 476.7998 352.9457 476.7998 C
359.6141 476.7998 l
360.5133 476.7998 361.1206 476.6702 361.4374 476.4126 c
361.7534 476.1542 361.912 475.7008 361.912 475.0513 c
361.912 474.6518 361.8198 474.3061 361.6372 474.0149 c
361.4538 473.723 361.2204 473.5443 360.9378 473.4779 c
360.6545 473.3944 360.326 473.336 359.9514 473.3031 c
359.5767 473.2696 359.1224 473.2532 358.5902 473.2532 C
357.1416 473.2532 L
361.4374 458.2678 L
364.6592 469.1571 l
364.8418 469.7894 365.1002 470.2311 365.4334 470.4808 c
365.7659 470.7306 366.2577 470.8555 366.907 470.8555 c
367.5064 470.8555 367.9764 470.6932 368.3181 470.3685 c
368.6593 470.0438 368.9628 469.4732 369.2297 468.6576 C
372.3517 458.2678 L
376.4727 473.2532 L
375.8733 473.2532 L
374.7993 473.2532 l
373.6505 473.2532 372.8762 473.382 372.4767 473.6402 c
372.0771 473.8978 371.8773 474.3684 371.8773 475.0513 c
371.8773 475.7173 372.027 476.1752 372.3268 476.4251 c
372.6264 476.6748 373.2087 476.7998 374.075 476.7998 C
380.7686 476.7998 l
381.2844 476.7998 381.6716 476.6499 381.9298 476.3501 c
382.1874 476.0505 382.317 475.6172 382.317 475.0513 c
382.317 474.4185 382.1671 473.9688 381.8675 473.7027 c
381.5677 473.4358 381.0011 473.2859 380.1692 473.2532 C
374.5496 454.5464 l
374.3326 453.9135 374.0626 453.4725 373.7379 453.2227 c
373.4132 452.973 372.9262 452.848 372.2769 452.848 c
371.6773 452.848 371.2029 453.0105 370.8532 453.335 c
370.5035 453.6598 370.2116 454.2295 369.979 455.0459 c
f
*U
*u
400.3744 458.6049 m
398.5675 457.4974 396.607 456.9441 394.4926 456.9441 c
393.0604 456.9441 391.8827 457.3102 390.9586 458.043 c
390.0345 458.7751 389.5724 459.7077 389.5724 460.8403 c
389.5724 462.3052 390.3132 463.4705 391.7953 464.3368 c
393.2766 465.2025 395.2997 465.6356 397.8643 465.6356 c
398.7136 465.6356 399.5665 465.5646 400.4243 465.4234 c
401.2813 465.2812 402.1679 465.0611 403.0843 464.7615 c
403.0843 462.064 l
403.0843 460.8653 402.1804 459.7117 400.3744 458.6049 c
f
404.0832 454.1468 m
404.383 453.8634 404.7654 453.7222 405.2321 453.7222 c
409.1533 453.7222 L
409.819 453.7222 410.3186 453.8721 410.6518 454.1717 c
410.9843 454.4715 411.1514 454.921 411.1514 455.5205 c
411.1514 456.1698 410.9516 456.6193 410.552 456.8692 c
410.1524 457.1189 409.361 457.2438 408.1793 457.2438 c
406.9555 457.2438 L
406.9555 468.5578 L
406.9555 471.4713 406.2063 473.6731 404.7077 475.1637 c
403.2092 476.6537 400.9941 477.3992 398.0641 477.3992 c
395.1997 477.3992 392.8482 477.0572 391.0085 476.3751 c
389.1682 475.6921 388.2487 474.8595 388.2487 473.8775 c
388.2487 473.261 388.4063 472.7575 388.7233 472.3666 c
389.0394 471.9748 389.4389 471.7796 389.9221 471.7796 c
390.4379 471.7796 391.4955 472.1293 393.094 472.8287 c
394.6924 473.5279 396.141 473.8775 397.4398 473.8775 c
399.3708 473.8775 400.7943 473.4193 401.7106 472.5039 c
402.6261 471.5876 403.0843 470.1726 403.0843 468.258 c
403.0843 468.0832 L
402.0516 468.3493 401.044 468.5452 400.0622 468.6701 c
399.0795 468.7951 398.1055 468.8574 397.14 468.8574 c
393.4764 468.8574 390.6339 468.1332 388.6108 466.6846 c
386.5879 465.236 385.5764 463.1958 385.5764 460.5655 c
385.5764 458.3505 386.338 456.5522 387.8617 455.1709 c
389.3852 453.7886 391.387 453.0979 393.8683 453.0979 c
395.5666 453.0979 397.2189 453.4225 398.8259 454.0719 c
400.4322 454.7212 401.9182 455.6617 403.2841 456.8942 c
403.4838 455.3707 l
403.5838 454.8376 403.7836 454.4293 404.0832 454.1468 c
f
*U
*u
424.9996 467.5838 m
424.9996 457.2438 L
433.2915 457.2438 l
433.9409 457.2438 434.4193 457.1063 434.7276 456.8317 c
435.0351 456.557 435.1896 456.1199 435.1896 455.5205 c
435.1896 454.8376 435.0438 454.3669 434.7525 454.1094 c
434.4607 453.851 433.9237 453.7222 433.1416 453.7222 C
416.8077 453.7222 l
416.1582 453.7222 415.6666 453.8721 415.3341 454.1717 c
415.0008 454.4715 414.8345 454.921 414.8345 455.5205 c
414.8345 456.1027 415.0047 456.536 415.3465 456.8191 c
415.6876 457.1017 416.216 457.2438 416.9324 457.2438 C
421.2782 457.2438 L
421.2782 473.2532 L
419.5799 473.2532 l
417.9643 473.2532 416.9574 473.382 416.5578 473.6402 c
416.1582 473.8978 415.9584 474.3684 415.9584 475.0513 c
415.9584 475.6337 416.1207 476.0708 416.4454 476.3627 c
416.7702 476.6537 417.2649 476.7998 417.9316 476.7998 C
423.626 476.7998 l
424.0755 476.7998 424.4166 476.7123 424.6499 476.5375 c
424.8826 476.3627 424.9996 476.1082 424.9996 475.7757 C
424.9996 471.5299 l
426.5809 473.5106 428.2293 474.9842 429.9447 475.9505 c
431.6595 476.916 433.5077 477.3992 435.4894 477.3992 c
436.9707 477.3992 438.1695 477.0994 439.0859 476.5 c
440.0015 475.9006 440.4595 475.1264 440.4595 474.1773 c
440.4595 473.5607 440.2301 473.0159 439.7727 472.5414 c
439.3145 472.0668 438.8112 471.8295 438.2617 471.8295 c
437.8784 471.8295 437.233 472.0832 436.3261 472.5913 c
435.4184 473.0987 434.6067 473.353 433.8909 473.353 c
432.5921 473.353 431.2224 472.891 429.7824 471.9669 c
428.3417 471.0429 426.7478 469.5817 424.9996 467.5838 c
f
*U
*u
450.4849 472.2792 m
451.9999 473.4443 453.8645 474.0274 456.0795 474.0274 c
458.1275 474.0274 459.8547 473.4234 461.2619 472.2167 c
462.6684 471.0092 463.4973 469.4148 463.7471 467.4339 c
447.488 467.4339 l
447.9702 469.4983 448.9693 471.1131 450.4849 472.2792 c
f
1 D
464.5213 464.162 m
466.2525 464.162 467.3139 464.3197 467.7058 464.6366 c
468.0967 464.9526 468.2926 465.5771 468.2926 466.5097 c
468.2926 469.5395 467.1352 472.1206 464.821 474.2522 c
462.5061 476.383 459.5926 477.4491 456.0795 477.4491 c
452.1997 477.4491 449.0529 476.3079 446.6387 474.0274 c
444.224 471.746 443.0173 468.7653 443.0173 465.0861 c
443.0173 461.4724 444.1576 458.5714 446.4389 456.3822 c
448.7194 454.192 451.7587 453.0979 455.555 453.0979 c
457.3034 453.0979 459.0642 453.3147 460.8374 453.7472 c
462.6106 454.1796 464.3292 454.804 465.9949 455.6203 c
466.7606 456.0027 467.3186 456.3946 467.6682 456.7942 c
468.0179 457.1938 468.1928 457.6347 468.1928 458.1179 c
468.1928 458.5838 468.0257 458.9749 467.6932 459.2919 c
467.3599 459.6079 466.9439 459.7663 466.4443 459.7663 c
465.9612 459.7663 464.5712 459.2457 462.2735 458.2053 c
459.9757 457.1641 457.8528 456.6443 455.9046 456.6443 c
453.3236 456.6443 451.2881 457.2976 449.7981 458.6049 c
448.3074 459.9115 447.4957 461.7644 447.363 464.162 c
464.1466 464.162 l
464.5213 464.162 L
f
*U
U
1 Ap
0 D
469.3598 400.0493 m
469.3598 445.9331 L
321.3362 445.9331 L
321.3362 400.0493 L
469.3598 400.0493 L
f
u
*u
0 Ap
1 g
341.4219 412.3292 m
341.4219 434.0293 L
337.8194 434.0293 l
336.4486 434.0293 335.5903 434.1386 335.2447 434.3577 c
334.8982 434.5763 334.7254 434.9757 334.7254 435.5551 c
334.7254 436.0637 334.8697 436.4451 335.1599 436.6995 c
335.4492 436.9537 335.8698 437.0809 336.4208 437.0809 C
343.4139 437.0809 l
343.7954 437.0809 344.0921 437.0028 344.304 436.8478 c
344.5158 436.6922 344.6219 436.4803 344.6219 436.212 C
344.6219 412.3292 L
351.2759 412.3292 l
351.8123 412.3292 352.2043 412.2127 352.452 411.9796 c
352.6991 411.7464 352.8229 411.3757 352.8229 410.8671 c
352.8229 410.2876 352.7023 409.8883 352.4627 409.6697 c
352.2223 409.4506 351.77 409.3413 351.1065 409.3413 C
335.4671 409.3413 l
334.9162 409.3413 334.4957 409.4684 334.2062 409.7227 c
333.9161 409.977 333.7718 410.3584 333.7718 410.8671 c
333.7718 411.3611 333.9202 411.7286 334.2169 411.969 c
334.5135 412.2088 334.9585 412.3292 335.5519 412.3292 C
341.4219 412.3292 l
f
*U
*u
365.3758 435.0253 m
365.3758 436.5511 365.5136 437.5114 365.789 437.9074 c
366.0646 438.3026 366.6539 438.5007 367.5585 438.5007 c
368.4339 438.5007 369.0135 438.3344 369.2962 438.0027 c
369.5783 437.6703 369.7201 436.8828 369.7201 435.6399 c
369.7201 434.4247 369.589 433.6723 369.328 433.3829 c
369.0665 433.0929 368.4764 432.9486 367.5585 432.9486 c
366.6539 432.9486 366.0646 433.0824 365.789 433.3512 c
365.5136 433.6195 365.3758 434.1776 365.3758 435.0253 c
f
369.2962 428.0532 m
369.2962 412.3292 L
376.0987 412.3292 l
376.6497 412.3292 377.0557 412.2127 377.3172 411.9796 c
377.5782 411.7464 377.7093 411.3757 377.7093 410.8671 c
377.7093 410.2876 377.5855 409.8883 377.3384 409.6697 c
377.0907 409.4506 376.6352 409.3413 375.9716 409.3413 C
359.527 409.3413 l
358.9614 409.3413 358.5376 409.4684 358.2555 409.7227 c
357.9727 409.977 357.8316 410.3584 357.8316 410.8671 c
357.8316 411.3611 357.9799 411.7286 358.2766 411.969 c
358.5734 412.2088 359.0184 412.3292 359.6118 412.3292 C
366.0751 412.3292 L
366.0751 425.913 L
361.9428 425.913 l
361.3633 425.913 360.9217 426.0435 360.6184 426.305 c
360.3144 426.566 360.1627 426.9441 360.1627 427.4388 c
360.1627 427.9328 360.3037 428.3036 360.5866 428.5513 c
360.8687 428.7983 361.2924 428.9222 361.858 428.9222 C
368.0672 428.9222 l
368.4485 428.9222 368.7486 428.8441 368.9678 428.6891 c
369.1863 428.5334 369.2962 428.3216 369.2962 428.0532 c
f
*U
*u
385.0309 412.3292 m
385.4759 412.3292 L
385.4759 425.913 L
385.0732 425.913 l
384.1124 425.913 383.4521 426.0255 383.0919 426.252 c
382.7316 426.4778 382.5515 426.8732 382.5515 427.4388 c
382.5515 427.9613 382.6999 428.3394 382.9965 428.5725 c
383.2932 428.8056 383.7732 428.9222 384.4376 428.9222 C
385.4336 428.9222 L
387.468 428.9222 l
387.8493 428.9222 388.1461 428.8441 388.358 428.6891 c
388.5699 428.5334 388.6757 428.3216 388.6757 428.0532 C
388.6757 426.6124 l
389.707 427.5726 390.7275 428.2825 391.7379 428.7421 c
392.7479 429.201 393.7968 429.4307 394.8849 429.4307 c
397.018 429.4307 398.6954 428.7666 399.9179 427.4388 c
401.1396 426.1103 401.7509 424.274 401.7509 421.929 C
401.7509 412.3292 L
402.747 412.3292 l
403.4529 412.3292 403.9614 412.2127 404.2727 411.9796 c
404.5833 411.7464 404.7389 411.3757 404.7389 410.8671 c
404.7389 410.3161 404.5727 409.9241 404.2409 409.691 c
403.9085 409.4579 403.3191 409.3413 402.4714 409.3413 C
397.7882 409.3413 l
396.8835 409.3413 396.3047 409.4472 396.0505 409.6592 c
395.7962 409.8711 395.669 410.2736 395.669 410.8671 c
395.669 411.418 395.8174 411.7994 396.114 412.0113 c
396.4107 412.2234 396.9683 412.3292 397.7882 412.3292 C
398.5299 412.3292 L
398.5299 421.1449 l
398.5299 422.7978 398.1549 424.0587 397.4067 424.9275 c
396.6576 425.7964 395.5697 426.2309 394.1432 426.2309 c
392.7022 426.2309 391.4307 425.7434 390.3288 424.7686 c
389.2268 423.7938 388.6757 422.5859 388.6757 421.1449 C
388.6757 412.3292 L
389.4176 412.3292 l
390.2651 412.3292 390.8374 412.2234 391.1341 412.0113 c
391.4307 411.7994 391.5791 411.418 391.5791 410.8671 c
391.5791 410.2736 391.4519 409.8711 391.1976 409.6592 c
390.9432 409.4472 390.3215 409.3413 389.3328 409.3413 C
385.4759 409.3413 L
384.3316 409.3413 l
383.7521 409.3413 383.3177 409.4645 383.0283 409.7121 c
382.7383 409.9591 382.5938 410.3439 382.5938 410.8671 c
382.5938 411.4319 382.7594 411.8167 383.0919 412.022 c
383.4237 412.2266 384.0701 412.3292 385.0309 412.3292 c
f
*U
*u
414.1161 427.3116 m
414.1161 417.1609 l
414.1161 415.3809 414.4903 414.0809 415.2392 413.2617 c
415.9876 412.4418 417.1744 412.0326 418.7994 412.0326 c
420.3392 412.0326 421.6564 412.52 422.7516 413.4949 c
423.8464 414.4696 424.394 415.6914 424.394 417.1609 C
424.394 425.913 L
421.4907 425.913 l
420.9398 425.913 420.5404 426.0296 420.2935 426.2627 c
420.0458 426.4958 419.9226 426.8593 419.9226 427.354 c
419.9226 427.8903 420.0563 428.2864 420.3253 428.5407 c
420.5934 428.7951 421.0246 428.9222 421.6179 428.9222 C
426.1317 428.9222 l
426.6682 428.9222 427.0462 428.8056 427.2654 428.5725 c
427.4839 428.3394 427.5938 427.7705 427.5938 426.8666 C
427.5938 412.3292 L
428.5688 412.3292 l
429.2607 412.3292 429.7587 412.2161 430.0627 411.9903 c
430.366 411.7636 430.5184 411.3896 430.5184 410.8671 c
430.5184 410.3584 430.3733 409.977 430.0839 409.7227 c
429.7939 409.4684 429.374 409.3413 428.823 409.3413 C
425.6019 409.3413 l
425.2205 409.3413 424.9238 409.4188 424.7119 409.5744 c
424.5 409.7293 424.394 409.9413 424.394 410.2101 C
424.394 411.6511 l
423.0378 410.6055 421.8756 409.8883 420.9081 409.5002 c
419.9398 409.1122 418.9194 408.9174 417.8459 408.9174 c
415.5148 408.9174 413.7664 409.5354 412.601 410.7716 c
411.4354 412.0075 410.8527 413.8763 410.8527 416.3768 C
410.8527 425.913 L
410.4077 425.913 l
409.4467 425.913 408.7898 426.0255 408.4369 426.252 c
408.0832 426.4778 407.9071 426.8732 407.9071 427.4388 c
407.9071 427.9328 408.0447 428.3036 408.3203 428.5513 c
408.5958 428.7983 409.0229 428.9222 409.6023 428.9222 C
412.8023 428.9222 l
413.2963 428.9222 413.6393 428.8228 413.8301 428.6255 c
414.0208 428.4274 414.1161 427.9897 414.1161 427.3116 c
f
*U
*u
447.2096 417.5424 m
442.3356 412.3292 L
442.9502 412.3292 l
443.6561 412.3292 444.2071 412.1981 444.6031 411.9373 c
444.9984 411.6756 445.1964 411.3049 445.1964 410.8247 c
445.1964 410.3161 445.023 409.9413 444.6772 409.7015 c
444.3309 409.4611 443.7831 409.3413 443.035 409.3413 C
437.186 409.3413 l
436.7623 409.3413 436.4085 409.4824 436.1265 409.7651 c
435.8437 410.0472 435.7027 410.4009 435.7027 410.8247 c
435.7027 411.3472 435.8933 411.7286 436.2748 411.969 c
436.6562 412.2088 437.2635 412.3292 438.0973 412.3292 C
438.5212 412.3292 L
445.3871 419.3649 L
438.6483 425.913 L
438.3516 425.913 l
437.5317 425.913 436.9636 426.0223 436.6457 426.2414 c
436.3278 426.46 436.1689 426.8455 436.1689 427.3963 c
436.1689 427.9751 436.349 428.3746 436.7092 428.5937 c
437.0695 428.8123 437.7583 428.9222 438.7754 428.9222 C
443.1196 428.9222 l
443.8825 428.9222 444.4368 428.7983 444.7832 428.5513 c
445.1289 428.3036 445.3025 427.9189 445.3025 427.3963 c
445.3025 426.9155 445.1076 426.5487 444.7197 426.2945 c
444.3309 426.0401 443.7694 425.913 443.035 425.913 C
442.8654 425.913 L
447.4215 421.4416 L
451.7658 425.913 L
451.3208 425.913 l
450.5294 425.913 449.9433 426.0296 449.5619 426.2627 c
449.1804 426.4958 448.9898 426.8593 448.9898 427.354 c
448.9898 427.9049 449.1592 428.3036 449.4983 428.5513 c
449.8373 428.7983 450.3883 428.9222 451.1512 428.9222 C
456.661 428.9222 l
457.0988 428.9222 457.4557 428.7844 457.7312 428.5089 c
458.0066 428.2335 458.1444 427.8765 458.1444 427.4388 c
458.1444 426.9155 457.9676 426.5308 457.6146 426.2838 c
457.261 426.0362 456.6961 425.913 455.9194 425.913 C
455.3259 425.913 L
449.244 419.5767 L
456.661 412.3292 L
456.8729 412.3292 l
457.4094 412.3292 457.8265 412.1981 458.1231 411.9373 c
458.4198 411.6756 458.5682 411.3049 458.5682 410.8247 c
458.5682 410.2591 458.3988 409.8711 458.0596 409.6592 c
457.7206 409.4472 457.0213 409.3413 455.9617 409.3413 C
451.6386 409.3413 l
450.8896 409.3413 450.3387 409.4611 449.9856 409.7015 c
449.6321 409.9413 449.4559 410.3161 449.4559 410.8247 c
449.4559 411.2909 449.6254 411.6578 449.9646 411.9267 c
450.3036 412.1949 450.7698 412.3292 451.3631 412.3292 C
452.5498 412.3292 L
447.2096 417.5424 l
f
*U
U
u
0 R
0 G
1.5 w
201.2092 463.7972 m
201.2092 426.5972 l
S
200.4342 427.3722 m
334.8323 427.3722 l
S
U
*u
0 O
0 g
1 w
476.0812 478.2771 m
476.5944 477.7618 476.8511 477.1422 476.8511 476.4175 c
476.8511 475.7036 476.5927 475.0872 476.0759 474.5687 c
475.559 474.05 474.9399 473.7907 474.219 473.7907 c
473.4978 473.7907 472.8798 474.0491 472.3648 474.5661 c
471.8497 475.0828 471.5922 475.6999 471.5922 476.4175 c
471.5922 477.135 471.8506 477.753 472.3675 478.2718 c
472.8843 478.7903 473.5014 479.0497 474.219 479.0497 c
474.9471 479.0497 475.5678 478.7921 476.0812 478.2771 c
f
1 D
474.6212 477.5791 m
474.7332 477.5008 474.7891 477.3801 474.7891 477.2167 c
474.7891 477.0533 474.7296 476.93 474.6105 476.8464 c
474.4915 476.7629 474.315 476.7213 474.0804 476.7213 c
473.7714 476.7213 L
473.7714 477.6963 L
474.0912 477.6963 l
474.3326 477.6963 474.5093 477.6572 474.6212 477.5791 c
f
473.8728 476.1672 m
473.9792 476.1672 474.06 476.1466 474.1152 476.1058 c
474.17 476.0649 474.2526 475.961 474.3628 475.7941 c
474.917 474.9576 L
474.9844 474.8474 475.0456 474.7738 475.1008 474.7366 c
475.1557 474.6992 475.2223 474.6806 475.3006 474.6806 c
475.6204 474.6806 L
475.7126 474.6806 475.7845 474.7072 475.8361 474.7604 c
475.8876 474.8137 475.9133 474.8866 475.9133 474.979 c
475.9133 475.0854 475.8831 475.1609 475.8228 475.2054 c
475.7624 475.2498 475.654 475.2719 475.4978 475.2719 c
474.9436 476.1139 L
474.9151 476.1565 474.8903 476.1911 474.8691 476.2177 c
474.8477 476.2444 474.828 476.263 474.8105 476.2737 c
475.0163 476.3447 475.1789 476.4618 475.298 476.6254 c
475.4169 476.7888 475.4765 476.9769 475.4765 477.1902 c
475.4765 477.5594 475.3521 477.8322 475.1034 478.008 c
474.8547 478.1838 474.4695 478.2718 473.9473 478.2718 c
472.9348 478.2718 L
472.8425 478.2718 472.7698 478.2459 472.7164 478.1944 c
472.6631 478.1428 472.6366 478.0709 472.6366 477.9787 c
472.6366 477.8827 472.6641 477.8117 472.7191 477.7656 c
472.7741 477.7192 472.8567 477.6963 472.9669 477.6963 c
473.0734 477.6963 L
473.1534 477.6963 L
473.1534 475.2719 L
473.0734 475.2719 L
472.9562 475.2719 L
472.8497 475.2719 472.7698 475.2481 472.7164 475.2 c
472.6631 475.1521 472.6366 475.0783 472.6366 474.979 c
472.6366 474.8866 472.6631 474.8137 472.7164 474.7604 c
472.7698 474.7072 472.8425 474.6806 472.9348 474.6806 c
473.894 474.6806 L
474.0288 474.6806 474.1266 474.7035 474.1871 474.7499 c
474.2474 474.7959 474.2776 474.8723 474.2776 474.979 c
474.2776 475.0749 474.2457 475.1476 474.1817 475.1974 c
474.1178 475.247 474.0254 475.2719 473.9047 475.2719 c
473.7714 475.2719 L
473.7714 476.1672 l
473.8728 476.1672 L
f
471.9892 474.177 m
472.6019 473.5607 473.3451 473.2526 474.219 473.2526 c
475.0928 473.2526 475.8369 473.5624 476.4515 474.1824 c
477.0659 474.8021 477.3733 475.5472 477.3733 476.4175 c
477.3733 477.2877 477.0651 478.0309 476.4488 478.6474 c
475.8324 479.2636 475.0892 479.5718 474.219 479.5718 c
473.3487 479.5718 472.6062 479.2644 471.9918 478.65 c
471.3772 478.0354 471.07 477.2914 471.07 476.4175 c
471.07 475.5401 471.3765 474.7933 471.9892 474.177 c
f
*U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
